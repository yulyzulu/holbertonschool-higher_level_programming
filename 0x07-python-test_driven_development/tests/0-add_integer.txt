====================
0. Integers addition module:
====================

Import module:
    >>> add_integer = __import__('0-add_integer').add_integer

Function:
=======.
Write a function that adds 2 integers.

Operations:
=========
a and b must be integers or floats, otherwise raise a TypeError exception
with the message a must be an integer or b must be an integer:

a must be integers or float:
    >>> add_integer(5, 3)
    8

a must be integers or float:
    >>> add_integer(-2)
    96

a must be integers or float:
    >>> add_integer(---9)
    89

a must be integers or float:
    >>> add_integer(-----9, -----9)
    -18

b must be integers or float:
    >>> add_integer(3.5, 6)
    9

a must be integers or float:
    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

a must be integers or float:
    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

b must be integers or float:
    >>> add_integer(9, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

a must be integers or float:
    >>> add_integer(True)
    Traceback (most recent call last):
    TypeError: a must be an integer

a must be integers or float:
    >>> add_integer(True, False)
    Traceback (most recent call last):
    TypeError: a must be an integer


b must be integers or float:
    >>> add_integer(9, False)
    Traceback (most recent call last):
    TypeError: b must be an integer

a must be integers or float:
    >>> add_integer((1, 2, 3))
    Traceback (most recent call last):
    TypeError: a must be an integer

a must be integers or float:
    >>> add_integer((1, 2, 3), (4, 5, 6))
    Traceback (most recent call last):
    TypeError: a must be an integer


b must be integers or float:
    >>> add_integer(9, (4, 5, 6))
    Traceback (most recent call last):
    TypeError: b must be an integer

a must be integers or float:
    >>> add_integer([1, 2, 3])
    Traceback (most recent call last):
    TypeError: a must be an integer

a must be integers or float:
    >>> add_integer([1, 2, 3], [4, 5, 6])
    Traceback (most recent call last):
    TypeError: a must be an integer


b must be integers or float:
    >>> add_integer(9, [4, 5, 6])
    Traceback (most recent call last):
    TypeError: b must be an integer

a must be integers or float:
    >>> add_integer("Hello")
    Traceback (most recent call last):
    TypeError: a must be an integer

a must be integers or float:
    >>> add_integer("Hello", "world")
    Traceback (most recent call last):
    TypeError: a must be an integer


b must be integers or float:
    >>> add_integer(9, "world")
    Traceback (most recent call last):
    TypeError: b must be an integer

>>> add_integer(5, 3)
8

>>> add_integer(-2)
96

>>> add_integer(---9)
89

>>> add_integer(-----9, -----9)
-18

>>> add_integer(3.5, 6)
9

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(9, None)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(True)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(True, False)
Traceback (most recent call last):
TypeError: a must be an integer


>>> add_integer(9, False)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer((1, 2, 3))
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer((1, 2, 3), (4, 5, 6))
Traceback (most recent call last):
TypeError: a must be an integer


>>> add_integer(9, (4, 5, 6))
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer([1, 2, 3])
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer([1, 2, 3], [4, 5, 6])
Traceback (most recent call last):
TypeError: a must be an integer


>>> add_integer(9, [4, 5, 6])
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("Hello")
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer("Hello", "world")
Traceback (most recent call last):
TypeError: a must be an integer


>>> add_integer(9, "world")
Traceback (most recent call last):
TypeError: b must be an integer

